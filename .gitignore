# This .gitignore file is based on the Visual Studio template
# https://github.com/github/gitignore/blob/main/VisualStudio.gitignore
# and customized for your specific needs.

# ===========================
# Visual Studio & Build Files
# ===========================

# User-specific files
# These are local, user-specific files generated by Visual Studio.
# They store preferences, open documents, breakpoints, etc.
*.suo
*.user
*.userosscache
*.sln.docstates
.vs/ # Ignore the .vs folder created by Visual Studio 2017+ (contains local settings, etc.)

# Build results
# These are generated during the build process and should not be versioned.
[Dd]ebug/
[Rr]elease/
[Bb]in/
[Oo]bj/
x64/
x86/
build/
bld/
msbuild.log
msbuild.err
msbuild.wrn
*.log # General log files (might include msbuild logs, etc.)
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
*.tmp
*.tmp_proj
*.pdb # Program Database files (debug symbols)
*.ilk # Incremental Linker files
*.meta # Metadata files (Unity projects, etc. - generally not needed for C# projects unless specific context)

# Intermediate Visual C++ files
# Often generated if you mix C++ with C# or for native components.
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler files
*.psess
*.vsp
*.vspx

# ReSharper and other JetBrains tools (Rider, etc.)
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user
.idea/ # Rider specific configuration folder

# NCrunch (continuous testing tool)
_NCrunch*

# Click-Once and Publish output
publish/
*.Publish.xml
*.pubxml
*.azurePubxml
*.publishsettings

# NuGet packages and related files
# The `packages` folder contains downloaded NuGet packages.
# With PackageReference, this folder is less common, but still good to include.
packages/
# Optional: if you use packages.config (older format) and need this to be versioned for some reason.
# !packages/repositories.config

# Windows Azure specific build output
csx/
*.build.csdef

# Windows Store app package directory
AppPackages/

# Backup & Report Files from VS Upgrades
# These are temporary files generated when upgrading project files to newer VS versions.
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server related files (local DB files)
App_Data/*.mdf
App_Data/*.ldf
sql/ # General SQL related output folders
*.dbmdl

# RIA/Silverlight projects (older technology, but included for completeness)
Generated_Code/


# ===========================
# IDE & OS Specific Files
# ===========================

# Visual Studio Code
.vscode/

# JetBrains IDEs (e.g., Rider, IntelliJ)
.idea/

# Cursor IDE (if it creates a specific directory)
.cursor/

# macOS (Apple-specific files)
.DS_Store

# Windows specific
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Swapping/Temporary Files (common across various editors/OS)
*.swp
*.*~

# Python (if applicable)
*.pyc

# ===========================
# Configuration Files
# ===========================

# Application settings (often contain sensitive data or local overrides)
# It's good practice to version appsettings.json for default values,
# but ignore local development overrides or secrets.
# If you are using User Secrets, you should not version appsettings.Development.json either.
# For production, secrets should be managed via environment variables or a secret store.
# I'm commenting these out assuming you might want appsettings.json to be versioned for default values.
# If these contain sensitive data for ALL environments, consider not versioning them or using secrets.

appsettings.json
appsettings.Development.json
/.vs/SmokeZeroDigitalSolution
/.vs/ProjectEvaluation
